datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique
  name String? @default("User")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  lists    List[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model List {
  id    String @id @default(cuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  todos ToDo[]
}

model ToDo {
  id   String @id @default(cuid())
  body String
  urgent Boolean
  important Boolean
  complete Boolean @default(false)
  dueDate DateTime?
  sortOrder Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  listId String
}
 


